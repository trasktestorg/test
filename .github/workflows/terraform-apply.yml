name: Terraform apply
on:
  merge_group:
    branches:
      - main

permissions:
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

        # merge_group doesn't support "paths" filtering directly
      - name: Check for changes in Terraform files
        id: tf-files
        run: |
          if git diff --name-only ${{ github.event.merge_group.base_sha }} ${{ github.event.merge_group.head_sha }} | grep '\.tf$'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - uses: hashicorp/setup-terraform@v3
        if: steps.tf-files.outputs.changed == 'true'
        with:
          terraform_version: 1.12.1

      - name: Create private key file
        if: steps.tf-files.outputs.changed == 'true'
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > ${{ runner.temp }}/oci_api_key.pem

      - name: Terraform init
        if: steps.tf-files.outputs.changed == 'true'
        env:
          OCI_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          OCI_user_ocid: ${{ secrets.OCI_USER_OCID }}
          OCI_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          OCI_private_key_path: ${{ runner.temp }}/oci_api_key.pem
          OCI_region: ${{ secrets.OCI_REGION }}
        run: terraform init

      - name: Terraform apply
        if: steps.tf-files.outputs.changed == 'true'
        env:
          OCI_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          OCI_user_ocid: ${{ secrets.OCI_USER_OCID }}
          OCI_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          OCI_private_key_path: ${{ runner.temp }}/oci_api_key.pem
          OCI_region: ${{ secrets.OCI_REGION }}
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GITHUB_OWNER: open-telemetry # this is needed since using a classic PAT above
        run: |
          # TODO change this to apply when ready
          terraform plan -auto-approve -no-color
